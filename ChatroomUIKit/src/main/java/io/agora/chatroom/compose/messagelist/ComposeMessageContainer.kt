package io.agora.chatroom.compose.messagelist

import androidx.compose.runtime.Composable
import io.agora.chatroom.viewmodel.messages.MessageListViewModel

/**
 * Represents the message item container that allows us to customize each type of item in the MessageList.
 *
 * @param messageListItem The state of the message list item.
 * @param onLongItemClick Handler when the user long taps on an item.
 * @param giftMessageContent Composable that represents system messages.
 * @param messageItemContent Composable that represents regular messages.
 */
@Composable
fun ComposeMessageContainer(
    itemIndex: Int,
    viewModel: MessageListViewModel,
    messageListItem: ComposeMessageListItemState,
    onLongItemClick: (Int, ComposeMessageListItemState) -> Unit = { index, message ->},
    giftMessageContent: @Composable (GiftMessageState) -> Unit = {
        DefaultGiftMessageContainer(
            itemIndex = itemIndex,
            viewModel = viewModel,
            giftMessageState = it,
            onLongItemClick = onLongItemClick,
        )
    },
    messageItemContent: @Composable (ComposeMessageItemState) -> Unit = {
        DefaultMessageContainer(
            itemIndex = itemIndex,
            viewModel = viewModel,
            messageItem = it,
            onLongItemClick = onLongItemClick,
        )
    },
    joinedItemContent: @Composable (JoinedMessageState) -> Unit = {
        DefaultJoinedMessageContainer(
            itemIndex = itemIndex,
            viewModel = viewModel,
            messageItem = it,
            onLongItemClick = onLongItemClick,
        )
    }
) {
    when (messageListItem) {
        is JoinedMessageState -> joinedItemContent(messageListItem)
        is GiftMessageState -> giftMessageContent(messageListItem)
        is ComposeMessageItemState -> messageItemContent(messageListItem)

        else -> {}
    }
}

/**
 * The default System message content.
 *
 * A system message is a message generated by a system event, such as updating the channel or muting a user.
 *
 * @param giftMessageState The system message item to show.
 */
@Composable
internal fun DefaultGiftMessageContainer(
    itemIndex: Int,
    viewModel: MessageListViewModel,
    giftMessageState: GiftMessageState,
    onLongItemClick: (Int, ComposeMessageListItemState) -> Unit = {index,item ->},
) {
    ComposeMessageItem(
        itemIndex = itemIndex,
        itemType = ComposeItemType.ITEM_GIFT,
        isShowDateSeparator = viewModel.isShowDateSeparators,
        isShowLabel = viewModel.isShowLabel,
        isShowAvatar = viewModel.isShowAvatar,
        messageItem = giftMessageState,
        onLongItemClick = onLongItemClick,
    )
}

/**
 * The default message item content.
 *
 * @param messageItem The message item to show.
 * @param onLongItemClick Handler when the user long taps on an item.
 */
@Composable
internal fun DefaultMessageContainer(
    itemIndex: Int,
    viewModel: MessageListViewModel,
    messageItem: ComposeMessageItemState,
    onLongItemClick: (Int, ComposeMessageListItemState) -> Unit = {index,item ->},
) {
    ComposeMessageItem(
        itemIndex = itemIndex,
        itemType = ComposeItemType.NORMAL,
        isShowDateSeparator = viewModel.isShowDateSeparators,
        isShowLabel  = viewModel.isShowLabel,
        isShowAvatar  = viewModel.isShowAvatar,
        messageItem = messageItem,
        onLongItemClick = onLongItemClick,
    )
}

/**
 * The join message item content.
 *
 * @param messageItem The message item to show.
 * @param onLongItemClick Handler when the user long taps on an item.
 */
@Composable
internal fun DefaultJoinedMessageContainer(
    itemIndex: Int,
    viewModel: MessageListViewModel,
    messageItem: JoinedMessageState,
    onLongItemClick: (Int, ComposeMessageListItemState) -> Unit = {index,item ->},
) {
    ComposeMessageItem(
        itemIndex = itemIndex,
        itemType = ComposeItemType.ITEM_JOIN,
        isShowDateSeparator = viewModel.isShowDateSeparators,
        isShowLabel = viewModel.isShowLabel,
        isShowAvatar = viewModel.isShowAvatar,
        messageItem = messageItem,
        onLongItemClick = onLongItemClick,
    )
}