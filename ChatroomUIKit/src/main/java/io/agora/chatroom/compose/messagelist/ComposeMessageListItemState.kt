package io.agora.chatroom.compose.messagelist

import io.agora.chatroom.service.ChatMessage
import io.agora.chatroom.service.GiftEntityProtocol

/**
 * Represents the type of an item that we're showing in the message list.
 * @param messageId The id of the message.
 * @param conversationId The conversation id of the message.
 */
sealed class ComposeMessageListItemState(val messageId: String, val conversationId: String)


/**
 * Represents a Joined Chatroom.
 *
 * @param message customer message.
 */
data class JoinedMessageState(val message: ChatMessage) : ComposeMessageListItemState(message.msgId, message.conversationId())

/**
 * Represents a message generated by a system event, such as updating the channel or muting a user.
 *
 * @param gift The message to show.
 */
data class GiftMessageState(
    val message: ChatMessage,
    val gift: GiftEntityProtocol
) : ComposeMessageListItemState(message.msgId, message.conversationId())

/**
 * Represents each message item we show in the list of messages.
 *
 * @param message The message to show.
 */
data class ComposeMessageItemState(
    val message: ChatMessage,
    val translateContent:String,
    val focusState: MessageFocusState? = null,
) : ComposeMessageListItemState(message.msgId, message.conversationId())



enum class ComposeItemType{
    NORMAL,
    ITEM_JOIN,
    ITEM_GIFT,
}